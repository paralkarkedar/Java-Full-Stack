Double Dimensional Array
========================
Double dimensional array is a combination of rows and columns.

Double dimensional array is implemented based on array or arrays approach but not matrix form.

The main objective of double dimensional array is memory utilization.

Double dimensional array we need to use develop business oriented applications, gaming applications, matrix type of applications and etc.

We can declare double dimensional array as follow.

syntax:
------
	dataype[][]  variable_name=new datatype[rows][cols];

ex:
	int[][] arr=new int[3][3];

	Here we can store total 9 elements.


Q) Write a java program to display array elements in matrix form?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the rows :");
		int rows=sc.nextInt();
		
		System.out.println("Enter the cols :");
		int cols=sc.nextInt();
		
		int[][] arr=new int[rows][cols];
		
		//insert the elements
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				System.out.println("Enter the element :");
				arr[i][j]=sc.nextInt();
			}
		}
		
		//display the elements 
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				System.out.print(arr[i][j]+" ");
			}
			//new line
			System.out.println();
		}
		
		
	}
}

Q) Write a java program to perform sum of diagonal elements?

Input:
	1 2 3 
	4 5 6
	7 8 9

class Test  
{
	public static void main(String[] args) 
	{
		int[][] arr={
						{1,2,3}, 
						{4,5,6},
						{7,8,9}
					};
					
		int rows=arr.length;
		int cols=arr[0].length;
		
		//logic
		int sum=0;
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				if(i==j)
				{
					sum+=arr[i][j];
				}
			}
		}
		
		System.out.println(sum);
	}
}


Q) Write a java program to perform sum of upper triangle elements?

Input:
	1 2 3 
	4 5 6
	7 8 9

class Test  
{
	public static void main(String[] args) 
	{
		int[][] arr={
						{1,2,3}, 
						{4,5,6},
						{7,8,9}
					};
					
		int rows=arr.length;
		int cols=arr[0].length;
		
		//logic
		int sum=0;
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				if(i<j)
				{
					sum+=arr[i][j];
				}
			}
		}
		
		System.out.println(sum);
	}
}

Q) Write a java program to perform sum of lower triangle elements?

Input:
	1 2 3 
	4 5 6
	7 8 9


class Test  
{
	public static void main(String[] args) 
	{
		int[][] arr={
						{1,2,3}, 
						{4,5,6},
						{7,8,9}
					};
					
		int rows=arr.length;
		int cols=arr[0].length;
		
		//logic
		int sum=0;
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				if(i>j)
				{
					sum+=arr[i][j];
				}
			}
		}
		
		System.out.println(sum);
	}
}


Q) Write a java program to display square of a matrix?

Input:
	1 2 3 
	4 5 6
	7 8 9


class Test  
{
	public static void main(String[] args) 
	{
		int[][] arr={
						{1,2,3}, 
						{4,5,6},
						{7,8,9}
					};
					
		int rows=arr.length;
		int cols=arr[0].length;
		
		//logic
		int sum=0;
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				System.out.print(arr[i][j] * arr[i][j]+" ");		
			}
			//new line
			System.out.println();
		}
	}
}

Q) Write a java program to display array elements in spiral form?

input:
	1 2 3 
	4 5 6
	7 8 9 

output:
	1 2 3 6 9 8 7 4 5 


class Test  
{
	public static void main(String[] args) 
	{
		int[][] matrix={
						{1,2,3}, 
						{4,5,6},
						{7,8,9}
					};
					
		int top=0;
		int bottom=matrix.length-1;
		int left=0;
		int right=matrix[0].length-1;
		
		while(true)
		{
			if(left>right)
			{
				break;
			}
			for(int i=left;i<=right;i++)
			{
				System.out.print(matrix[top][i]+" ");
			}
			top++;
			
			if(top>bottom)
			{
				break;
			}
			for(int i=top;i<=bottom;i++)
			{
				System.out.print(matrix[i][right]+" ");
			}
			right--;
			
			
			if(left>right)
			{
				break;
			}
			for(int i=right;i>=left;i--)
			{
				System.out.print(matrix[bottom][i]+" ");
			}
			bottom--;
			
			if(top>bottom)
			{
				break;
			}
			for(int i=bottom;i>=top;i--)
			{
				System.out.print(matrix[i][left]+" ");
			}
			left++;
		}
		
	}
		
}

Anonymous array
===============
Sometimes we will declare an array without name such type of nameless array is called anonymous array.

The main objective of anonymous array is a just for instance use.

We can declare anonymous array as follow.

ex:
	new int[]{10,20,30};
	new int[][]{{10,20,30},{40,50,60}};

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		//caller method
		sum(new int[]{10,20,30});
	}
	//callie method 
	public static void sum(int[] arr)
	{
		int total=0;
		for(int i:arr)
		{
			total+=i;
		}
		
		System.out.println(total);
	}
}

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		//caller method
		System.out.println(sum(new int[]{10,20,30,40}));
	}
	//callie method 
	public static int sum(int[] arr)
	{
		int total=0;
		for(int i:arr)
		{
			total+=i;
		}
		
		return total;
	}
}

Q) What is the difference between length and length() method?

length
------
It is a final variable which is applicable only for arrays.

It will return size of an array.

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr=new int[4];
		
		System.out.println(arr.length);
	}	
}

length() 
----------
It is a final method which is applicable for String objects.

It will return number of characters present in a string.

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		String str="ihubtalent";
		
		System.out.println(str.length()); //10
	}	
}

Interview Question
=================

Q) Write a java program to segregate array elements using while loop?

input:
	1 0 0 1 1 0 1 1 0 0 

output:
	0 0 0 0 0 1 1 1 1 1 	

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr={1,0,0,1,1,0,1,1,0,0};
		
		int start=0;
		int end=arr.length-1;
		
		while(start<end)
		{
			if(arr[start]==0)
			{
				start++;
			}
			else if(arr[end]==1)
			{
				end--;
			}
			else
			{
				int temp=arr[start];
				arr[start]=arr[end];
				arr[end]=temp;
			}
		}
		
		//display
		for(int i:arr)
		{
			System.out.print(i+" ");
		}
		
	}	
}













































































































































