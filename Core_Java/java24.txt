Q) Write a java program to merge two arrays and display them in a sorting order?

input:
	6 9 7 10 8
	5 1 3 4  2

output:
	1 2 3 4 5 6 7 8 9 10

ex:

import java.util.Arrays;
class  Test 
{
	public static void main(String[] args) 
	{
		int[] arr1={6,9,7,10,8};
		int[] arr2={5,1,3,4,2};
		
		int size1=arr1.length;//5
		int size2=arr2.length;//5
		
		arr1=Arrays.copyOf(arr1,size1+size2);
		
		int j=0;
		for(int i=size1;i<arr1.length;i++)
		{
			arr1[i]=arr2[j++];
		}
		
		//sorting
		Arrays.sort(arr1);
		
		//display
		for(int i:arr1)
		{
			System.out.print(i+" ");
		}
		
	}
}

Q) Write a java program to insert the element in a given index?

input:
	arr =  5 8 2 4 3 9
	
	index = 3

	element = 10

output:
	5 8 2 10 4 3 9 


import java.util.Arrays;
class  Test 
{
	public static void main(String[] args) 
	{
		int[] arr ={5,8,2,4,3,9};
		int index = 3;
		int element = 10;
		
		arr=Arrays.copyOf(arr,arr.length+1);
		
		for(int i=arr.length-1;i>=index;i--)
		{
			arr[i]=arr[i-1];	
		}
		
		arr[index]=element;
		
		//display
		for(int i:arr)
		{
			System.out.print(i+" ");
		}
	}
}

Q) Write a java program to delete first occurance of a given element?

input:
	arr = 5 2 9 4 7 2 1 6 2  

	element = 2 

output:
	5 9 4 7 2 1 6 2 

 

class  Test 
{
	public static void main(String[] args)  
	{ 
		int[] arr ={5,2,9,4,7,2,1,6,2};   
											
		int element = 2; 
		
		int[] newArr=new int[arr.length-1];
		
		int j=0,count=0;
		for(int i=0;i<arr.length;i++)
		{
			if(arr[i]==element && count==0)
			{
				count=1;
				continue;
			}
			newArr[j++]=arr[i];
		}
		
		//display the data
		for(int i:newArr)
		{
			System.out.print(i+" ");
		}
		
		
	}
}


Q) Write a java program to identify and print all elements in an array that are greater 
than both their immediate predecessors and successors, considering the first and 
last elements as having only one neighbor? 
 
Input: 
 	 1 3 20 4 75 0 90 
 
Output: 
 	20  75  90


class  Test 
{
	public static void main(String[] args)  
	{ 
		int[] arr={1,3,20,4,75,0,90};   // 1  3   20   4   75  0   90
		
		//first element
		if(arr[0]>arr[1])
		{
			System.out.print(arr[0]+" ");
		}
		
		//middle elements
		for(int i=1;i<arr.length-1;i++)
		{
			if(arr[i]>arr[i-1] && arr[i]>arr[i+1])
			{
				System.out.print(arr[i]+" ");
			}
		}
		
		
		//last element
		if(arr[arr.length-1]>arr[arr.length-2])
		{
			System.out.print(arr[arr.length-1]+" ");
		}
	}
}


Q) Write a java program to determine the smallest number of coins needed to total 
86 rupees. Use the denominations provided in the array {1,2,5,10}? 
 
Output: 
 	1 coin(s) of 1 rupee(s) 
 	1 coin(s) of 5 rupee(s) 
 	8 coin(s) of 10 rupee(s)

ex:
---
class  Test 
{
	public static void main(String[] args)  
	{ 
		int[] denominations={1,2,5,10};
		int amount=86;
		
		//caller method
		int[] result=minimumCoins(denominations,amount);
		
		for(int i=0;i<result.length;i++)
		{
			if(result[i]>0)
			{
				System.out.println(result[i]+" coin(s) of " +denominations[i]+" rupee(s)");
			}
		}
	}
	
	//callie method
	public static  int[]  minimumCoins(int[] denominations,int amount)
	{
		int[] coinsCount=new int[denominations.length];
		
		for(int i=denominations.length-1;i>=0;i--)
		{
			coinsCount[i]=amount/denominations[i];
			
			amount%=denominations[i];
		}
		
		return coinsCount;
	}
}


Q) Write a java program to segregate array elements?

input:
	1 0 0 1 1 0 1 1 0 0 

output:
	0 0 0 0 0 1 1 1 1 1 	

























