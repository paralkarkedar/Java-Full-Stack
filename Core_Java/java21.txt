Recursion
==========
A method which call itself for many number of times is called recursion.

Recursion is similar to loopings.

Whenever we use recursion then we should not use loops.


Q) Write a java program to display 10 natural numbers without using loops?

class  Test 
{
	public static void main(String[] args) 
	{
		//caller method
		display(1);
	}
	
	//callie method 
	public static  void display(int i)
	{
		if(i<=10)
		{
			System.out.print(i+" "); // 1 2 3 4 5 6 7 8 9 10
			
			display(i+1);
		}
	}
}


Q) WRite a java program to perform sum of two numbers without using arithmetic operator?

import java.util.Scanner;
class  Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the first number :");
		int a=sc.nextInt(); //5
		
		System.out.println("Enter the second number :");
		int b=sc.nextInt(); //10
	 	
		//caller method
		System.out.println(calculate(a,b));
	}
	
	//callie method 
	public static int calculate(int a,int b)
	{
		if(a==0)
			return b;
		
		return calculate(--a,++b);
	}
}

Q) Write a java program to find out factorial of a given number using recursion?

import java.util.Scanner;
class  Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number :");
		int n=sc.nextInt();//5
		
		//caller method
		System.out.println(factorial(n));
	}
	//callie method 
	public static int factorial(int n)
	{
		if(n<0)
			return -1;
		if(n==0)
			return 1;
		
		return n*factorial(n-1);
	}
}


Q) Write a java program to find out Nth-Element of fibonacci series?

fibnacci sequence : 0 1 1 2 3 5 8 ......

input:
	4

output:
	2  

ex:
---
import java.util.Scanner;
class  Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number :");
		int n=sc.nextInt();
		
		//caller method
		System.out.println(fib(n));
	}
	//callie method 
	public static int fib(int n)
	{
		if(n==0 || n==1)
			return 0;
		if (n==2)
			return 1;
		
		return fib(n-1)+fib(n-2);
	}
}


Arrays
======
Array is a collection of homogeneous data elements.

The main advantages of array are

1) We can represent multiple elements using single variable name.
   ex:
	int[]  arr={10,20,30};	

2) Performance point of view arrays are recommanded to use.

The main disadvantages of array are

1) Arrays are fixed in size. Once if we create an array there is no chance of increasing or decreasing
   the size of an array.

2) To use array concept in advanced we should know what is the size of an array which is always not 
   possible.

In java, we have three types of arrays.

1) Single Dimensional Array

2) Double Dimensional Array

3) Multi Dimensional Array


Array Declaration
-----------------
At the time of array declaration we should not specify array size.

					Arrays 
	|--------------------------------|----------------------------------|
Single dimensional Array	Double Dimensional Array	Multi Dimensional Array 

int[]  arr;			int[][] arr;			int[][][] arr;
int  []arr;			int  [][]arr;			int  [][][]arr;
int  arr[];			int  arr[][];			int arr[][][];
				int[]  []arr;			int[][]  []arr;
				int[]  arr[];			int[][] arr[];
				int  []arr[];			int[]  [][]arr;
								int[]  arr[][];
								int[]  []arr[];
								int   [][]arr[];
								int   []arr[][];

Array Creation
---------------
In java, every array consider as an object. Hence we will use new operator to create an array.

Diagram: java21.1

Rules to constructor an array
-----------------------------

Rule1:
-----
	At the time of array creation compulsary we need to specify array size.	

	ex:
		int[] arr=new int[3];  //valid 

		int[] arr=new int[];   // C.T.E Array dimension missing 

Rule2:
-----
	It is legal to have an array size with zero.
	ex:
		int[] arr=new int[0];
		System.out.println(arr.length);//0

Rule3:
-----
	We can't take negative number as an array size otherwise we will get runtime exception called
 	NegativeArraySizeException.
	ex:
		int[] arr=new int[3]; //valid 
		int[] arr=new int[-3]; // R.E NegativeArraySizeException.


Rule4:
-----
	The allowed datatype for an array size is byte,short,int and char.
	If we take other datatypes then we will get compile time error.
	ex:
		byte b=10;
		int[] arr=new int[b];

		int[] arr=new int['a'];

		int[] arr=new int[10.5d]; //invalid 

Rule5:
-----
	The maximum length we can take for an array size is maximum length of int.
	ex:
		int[] arr=new int[2147483647];
	
Array initialization
--------------------
Whenever we create an array, every array element will be initialized with default values.

If we are not happy with default values we can change with customized values.

Diagram: java21.2



Array Declaration, creation and initialization using single line
------------------------------------------------------------------

	int[] arr;
	arr = new int[3];
	arr[0] = 10;
	arr[1] = 20;
	arr[2] = 30;	===>	int[] arr={10,20,30};
			===> 	char[] carr={'a','b','c'};
			===>	String[] sarr={"hi","hello","bye"};


Single Dimensional Array Programs
==================================

Q) Write a java program to display the array elements?

import java.util.Scanner;
class  Test 
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the array size :");
		int size=sc.nextInt(); //4 
		
		int[] arr=new int[size];
		
		//insert elements 
		for(int i=0;i<arr.length;i++)
		{
			System.out.println("Enter the element : ");
			arr[i]=sc.nextInt();
		}
		
		//display elements
		for(int i=0;i<arr.length;i++)
		{
			System.out.print(arr[i]+" ");
		}
	}
}


Q) Write a java program to display array elements ?

input:
	3 7 1 2 9 5 

output:
	3
	7
	1
	2
	9
	5


class  Test 
{
	public static void main(String[] args) 
	{
		int[] arr={3,7,1,2,9,5};
		
		for(int i=0;i<arr.length;i++)
		{
			System.out.println(arr[i]);
		}
	}
}

iv) for each loop
==================
It is used to iterate elements from array.

ex:
---

class  Test 
{
	public static void main(String[] args) 
	{
		int[] arr={3,7,1,2,9,5};
		
		for(int i:arr)
		{
			System.out.println(i);
		}
	}
}

Q) Write a java program to perform sum of array elements?

input:
	3 7 1 2 9 5 

output:
	27


class  Test 
{
	public static void main(String[] args) 
	{
		int[] arr={3,7,1,2,9,5};
		
		int sum=0;
		
		for(int i:arr)
		{
			sum+=i;	
		}
		
		System.out.println(sum);
	}
}


Q) Write a java program to display array elements in reverse order?

input:
	3 7 1 2 9 5 

output:
	5 9 2 1 7 3 


class  Test 
{
	public static void main(String[] args) 
	{
		int[] arr={3,7,1,2,9,5};
		
		for(int i=arr.length-1;i>=0;i--)
		{
			System.out.print(arr[i]+" ");
		}
	}
}


Q) Write a java program to display even elements from given array?

input:
	3 7 1 2 9 8 

output:
	2 8


class  Test 
{
	public static void main(String[] args) 
	{
		int[] arr={3,7,1,2,9,8};
		
		for(int i:arr)
		{
			if(i%2==0)
			{
				System.out.print(i+" ");
			}
		}
	}
}

 
Q) Write a java program to count odd elements from given array?

input:
	3 7 1 2 9 8 

output:
	4


ex:

class  Test 
{
	public static void main(String[] args) 
	{
		int[] arr={3,7,1,2,9,8};
		
		int cnt=0;
		
		for(int i:arr)
		{
			if(i%2!=0)
			{
				cnt++;
			}
		}
		
		System.out.println(cnt);
	}
}













	



































































	

































